"<b>Animals to be aware of:</b>", newdat$ANIMALS_WARN,"<br>",
"<b>Other safety warnings:</b>", newdat$OTHER_WARN),
clusterOptions = markerClusterOptions(),
labelOptions = labelOptions(noHide = FALSE, direction = "left",textsize='8px',
style=list(
'color'= "black",
'font-family'= 'serif',
'font-style'= 'italic',
'box-shadow' = '3px 3px rgba(0,0,0,0.25)',
'font-size' = '15px',
'border-color' = 'rgba(0,0,0,0.5)'
))
)
mm
runApp('C:/Users/ClockworK/Desktop/monash semester 2/fit5147/r assignment/31043313_MD.Saadman_Hossain/shiny app.R')
runApp('Narrative viz shiny app.R')
runApp('Narrative viz shiny app.R')
runApp('IE_app/IE_app.R')
setwd("C:/Users/ClockworK/Desktop/IE project")
runApp('IE_app/IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
library(shiny); runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('sample_app')
runApp('sample_app')
install.packages(htmltools)
install.packages('htmltools')
install.packages("htmltools")
runApp('sample_app')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('Narrative viz shiny app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
runApp('IE_app.R')
rsconnect::setAccountInfo(name='saadman1995-account',
token='68913FDFA2877C587A3A037FD1DEF654',
secret='<SECRET>')
rsconnect::setAccountInfo(name='saadman1995-account',
token='68913FDFA2877C587A3A037FD1DEF654',
secret='/4HWu1H8Lxgj5UyiSIPfdmRAUMn+L0yBgc6GQkFy')
library(shiny); runApp('IE_app.R')
rsconnect::setAccountInfo(name='saadman1995-account',
token='D259AFCC49CF5E168A4D7CD62B53154B',
secret='<SECRET>')
rsconnect::setAccountInfo(name='saadman1995-account',
token='D259AFCC49CF5E168A4D7CD62B53154B',
secret='e4TOkvPqP7Kv1+8siTg2m3UdTDTTLfQX7BKYk2Ab')
require(rgdal)
require(ggplot2)
library(devtools)
# install_github("edzer/sfr")
library(sf)
library(tidyverse)
unzip(zipfile = "Vicmap Features of Interest.zip",
exdir = 'Vicmap Features of Interest')
shp <- readOGR(dsn = "Vicmap Features of Interest/ll_gda94/sde_shape/whole/VIC/VMFEAT/layer", layer = "foi_index_centroid")
#Converting to data frame
shapefile_df <- data.frame(shp)
library(dplyr)
library(data.table)
esite<-shapefile_df %>% filter((FTYPE == "emergency facility") & (PARENTNAME %like% "NATIONAL PARK"))
library(leaflet)
library(maps)
anglerIcon3 <- makeIcon(
iconUrl = "https://www.flaticon.com/svg/vstatic/svg/3309/3309766.svg?token=exp=1618177876~hmac=f86cd17bef86a71fee077174cf673758",
iconWidth = 12, iconHeight = 12,
iconAnchorX = 22, iconAnchorY = 94,
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
newdat <- esite[,c(5,10,11,22,21)]
mm3 <- leaflet(data = newdat) %>%
#using a provider tile terrain from stamen maps
addProviderTiles("Stamen.Terrain") %>%
#hovering on popups shows site names
addMarkers(~X_COORD, ~Y_COORD, popup = ~as.character(PARENTNAME), label = ~as.character(PARENTNAME))
mm3
mm3 <- leaflet(data = newdat) %>%
#using a provider tile terrain from stamen maps
addProviderTiles("Stamen.Terrain") %>%
#hovering on popups shows site names
addMarkers(~X_COORD, ~Y_COORD, popup = ~as.character(PARENTNAME), label = ~as.character(PARENTNAME),icon = anglerIcon3)
mm3
anglerIcon3 <- makeIcon(
iconUrl = "https://www.flaticon.com/svg/vstatic/svg/3309/3309766.svg?token=exp=1618177876~hmac=f86cd17bef86a71fee077174cf673758",
iconWidth = 20, iconHeight = 20,
iconAnchorX = 22, iconAnchorY = 94,
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
newdat <- esite[,c(5,10,11,22,21)]
mm3 <- leaflet(data = newdat) %>%
#using a provider tile terrain from stamen maps
addProviderTiles("Stamen.Terrain") %>%
#hovering on popups shows site names
addMarkers(~X_COORD, ~Y_COORD, popup = ~as.character(PARENTNAME), label = ~as.character(PARENTNAME),icon = anglerIcon3)
mm3
anglerIcon3 <- makeIcon(
iconUrl = "https://www.flaticon.com/svg/vstatic/svg/3309/3309766.svg?token=exp=1618177876~hmac=f86cd17bef86a71fee077174cf673758",
iconWidth = 30, iconHeight = 30,
iconAnchorX = 22, iconAnchorY = 94,
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
newdat <- esite[,c(5,10,11,22,21)]
mm3 <- leaflet(data = newdat) %>%
#using a provider tile terrain from stamen maps
addProviderTiles("Stamen.Terrain") %>%
#hovering on popups shows site names
addMarkers(~X_COORD, ~Y_COORD, popup = ~as.character(PARENTNAME), label = ~as.character(PARENTNAME),icon = anglerIcon3)
mm3
anglerIcon3 <- makeIcon(
iconUrl = "https://www.flaticon.com/svg/vstatic/svg/3309/3309766.svg?token=exp=1618177876~hmac=f86cd17bef86a71fee077174cf673758",
iconWidth = 30, iconHeight = 30,
iconAnchorX = 22, iconAnchorY = 94,
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
newdat <- esite[,c(5,10,11,22,21)]
mm3 <- leaflet(data = newdat) %>%
#using a provider tile terrain from stamen maps
addProviderTiles("Stamen.Terrain") %>%
#hovering on popups shows site names
addMarkers(~X_COORD, ~Y_COORD, label = ~as.character(NAME_LABEL),icon = anglerIcon3,
popup = paste("<b>Facilty type:</b>", newdat$FEATSUBTYP, "<br>",
"<b>Name:</b>", newdat$NAME_LABEL, "<br>",
"<b>Located at:</b>", newdat$PARENTNAME,"<br>"),
labelOptions = labelOptions(noHide = FALSE, direction = "left",textsize='8px',
style=list(
'color'= "black",
'font-family'= 'serif',
'font-style'= 'italic',
'box-shadow' = '3px 3px rgba(0,0,0,0.25)',
'font-size' = '9px',
'border-color' = 'rgba(0,0,0,0.5)'
))
)
mm3
anglerIcon3 <- makeIcon(
iconUrl = "https://www.flaticon.com/svg/vstatic/svg/3309/3309766.svg?token=exp=1618177876~hmac=f86cd17bef86a71fee077174cf673758",
iconWidth = 30, iconHeight = 30,
iconAnchorX = 22, iconAnchorY = 94,
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
newdat <- esite
mm3 <- leaflet(data = newdat) %>%
#using a provider tile terrain from stamen maps
addProviderTiles("Stamen.Terrain") %>%
#hovering on popups shows site names
addMarkers(~X_COORD, ~Y_COORD, label = ~as.character(NAME_LABEL),icon = anglerIcon3,
popup = paste("<b>Facilty type:</b>", newdat$FEATSUBTYP, "<br>",
"<b>Name:</b>", newdat$NAME_LABEL, "<br>",
"<b>Located at:</b>", newdat$PARENTNAME,"<br>"),
labelOptions = labelOptions(noHide = FALSE, direction = "left",textsize='8px',
style=list(
'color'= "black",
'font-family'= 'serif',
'font-style'= 'italic',
'box-shadow' = '3px 3px rgba(0,0,0,0.25)',
'font-size' = '9px',
'border-color' = 'rgba(0,0,0,0.5)'
))
)
mm3
anglerIcon3 <- makeIcon(
iconUrl = "https://www.flaticon.com/svg/vstatic/svg/3309/3309766.svg?token=exp=1618177876~hmac=f86cd17bef86a71fee077174cf673758",
iconWidth = 30, iconHeight = 30,
iconAnchorX = 22, iconAnchorY = 94,
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
newdat <- esite
mm3 <- leaflet(data = newdat) %>%
#using a provider tile terrain from stamen maps
addProviderTiles("Stamen.Terrain") %>%
#hovering on popups shows site names
addMarkers(~X_COORD, ~Y_COORD, label = ~NAME_LABEL,icon = anglerIcon3,
popup = paste("<b>Facilty type:</b>", newdat$FEATSUBTYP, "<br>",
"<b>Name:</b>", newdat$NAME_LABEL, "<br>",
"<b>Located at:</b>", newdat$PARENTNAME,"<br>"),
labelOptions = labelOptions(noHide = FALSE, direction = "left",textsize='8px',
style=list(
'color'= "black",
'font-family'= 'serif',
'font-style'= 'italic',
'box-shadow' = '3px 3px rgba(0,0,0,0.25)',
'font-size' = '9px',
'border-color' = 'rgba(0,0,0,0.5)'
))
)
mm3
mm3 <- leaflet(data = newdat) %>%
#using a provider tile terrain from stamen maps
addProviderTiles("Stamen.Terrain") %>%
#hovering on popups shows site names
addMarkers(~X_COORD, ~Y_COORD, label = ~NAME_LABEL,icon = anglerIcon3,
popup = paste("<b>Facilty type:</b>", newdat$FEATSUBTYP, "<br>",
"<b>Name:</b>", newdat$NAME_LABEL, "<br>",
"<b>Located at:</b>", tolower(newdat$PARENTNAME),"<br>"),
labelOptions = labelOptions(noHide = FALSE, direction = "left",textsize='8px',
style=list(
'color'= "black",
'font-family'= 'serif',
'font-style'= 'italic',
'box-shadow' = '3px 3px rgba(0,0,0,0.25)',
'font-size' = '9px',
'border-color' = 'rgba(0,0,0,0.5)'
))
)
mm3
anglerIcon3 <- makeIcon(
iconUrl = "https://www.flaticon.com/svg/vstatic/svg/3309/3309766.svg?token=exp=1618177876~hmac=f86cd17bef86a71fee077174cf673758",
iconWidth = 50, iconHeight = 50,
iconAnchorX = 22, iconAnchorY = 94,
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
newdat <- esite
mm3 <- leaflet(data = newdat) %>%
#using a provider tile terrain from stamen maps
addProviderTiles("Stamen.Terrain") %>%
#hovering on popups shows site names
addMarkers(~X_COORD, ~Y_COORD, label = ~NAME_LABEL,icon = anglerIcon3,
popup = paste("<b>Facilty type:</b>", newdat$FEATSUBTYP, "<br>",
"<b>Name:</b>", newdat$NAME_LABEL, "<br>",
"<b>Located at:</b>", tolower(newdat$PARENTNAME),"<br>"),
labelOptions = labelOptions(noHide = FALSE, direction = "left",textsize='8px',
style=list(
'color'= "black",
'font-family'= 'serif',
'font-style'= 'italic',
'box-shadow' = '3px 3px rgba(0,0,0,0.25)',
'font-size' = '9px',
'border-color' = 'rgba(0,0,0,0.5)'
))
)
mm3
mm3 <- leaflet(data = newdat) %>%
#using a provider tile terrain from stamen maps
addProviderTiles("Stamen.Terrain") %>%
#hovering on popups shows site names
addMarkers(~X_COORD, ~Y_COORD, label = ~NAME_LABEL,icon = anglerIcon3,
popup = paste("<b>Facilty type:</b>", newdat$FEATSUBTYP, "<br>",
"<b>Name:</b>", newdat$NAME_LABEL, "<br>",
"<b>Located at:</b>", tolower(newdat$PARENTNAME),"<br>"),
labelOptions = labelOptions(noHide = FALSE, direction = "left",textsize='14px',
style=list(
'color'= "black",
'font-family'= 'serif',
'font-style'= 'italic',
'box-shadow' = '3px 3px rgba(0,0,0,0.25)',
'font-size' = '9px',
'border-color' = 'rgba(0,0,0,0.5)'
))
)
mm3
mm3 <- leaflet(data = newdat) %>%
#using a provider tile terrain from stamen maps
addProviderTiles("Stamen.Terrain") %>%
#hovering on popups shows site names
addMarkers(~X_COORD, ~Y_COORD, label = ~NAME_LABEL,icon = anglerIcon3,
popup = paste("<b>Facilty type:</b>", newdat$FEATSUBTYP, "<br>",
"<b>Name:</b>", newdat$NAME_LABEL, "<br>",
"<b>Located at:</b>", tolower(newdat$PARENTNAME),"<br>"),
labelOptions = labelOptions(noHide = FALSE, direction = "left",textsize='14px',
style=list(
'color'= "black",
'font-family'= 'serif',
'font-style'= 'italic',
'box-shadow' = '3px 3px rgba(0,0,0,0.25)',
'font-size' = '14px',
'border-color' = 'rgba(0,0,0,0.5)'
))
)
mm3
library(shiny); runApp('IE_app.R')
View(esite)
View(esite)
View(xl_df)
xl_df<- read_excel("Campgrounds_site_v4.xlsx")
library(tidyverse)
xl_df = xl_df %>%
rename(
Longitude = xcoord,
Latitude = ycoord,
Park = PARK_NAME,
Description = ASSET_DESC,
Animal-warning = ANIMALS_WARN,
Other-warning = OTHER_WARN
)
xl_df<- read_excel("Campgrounds_site_v4.xlsx")
require(rgdal)
require(ggplot2)
library(devtools)
# install_github("edzer/sfr")
library(sf)
library(tidyverse)
library(readxl)
library(sf)
library(fs)
library(magrittr)
library(leaflet)
library(leaflet.extras)
xl_df<- read_excel("Campgrounds_site_v4.xlsx")
library(tidyverse)
xl_df = xl_df %>%
rename(
Longitude = xcoord,
Latitude = ycoord,
Park = PARK_NAME,
Description = ASSET_DESC,
Animal_warning = ANIMALS_WARN,
Other_warning = OTHER_WARN
)
xl_df$NOTE <- as.character(xl_df$NOTE)
xl_df$NOTE[is.na(xl_df$NOTE)] <- " "
View(xl_df)
xl_df<- read_excel("Campgrounds_site_v4.xlsx")
xl_df<- read_excel("Campgrounds_site_v4.xlsx")
library(tidyverse)
xl_df = xl_df %>%
rename(
Longitude = xcoord,
Latitude = ycoord,
Park = PARK_NAME,
Description = ASSET_DESC,
Animal_warning = ANIMALS_WARN,
Other_warning = OTHER_WARN,
Site_Name = SITE_NAME
)
xl_df$NOTE <- as.character(xl_df$NOTE)
xl_df$NOTE[is.na(xl_df$NOTE)] <- " "
xl_df$Animal_warning <- as.character(xl_df$Animal_warning)
xl_df$Animal_warning <- as.character(xl_df$Animal_warning)
xl_df$Animal_warning[is.na(xl_df$Animal_warning)] <- " "
xl_df$Other_warning <- as.character(xl_df$Other_warning)
xl_df$Other_warning[is.na(xl_df$Other_warning)] <- " "
write.csv(xl_df, file = "c:\\Users\\ClockworK\\Desktop\\IE project\\Campgrounds_mapbox.csv", row.names = FALSE)
shp <- readOGR(dsn = "Vicmap Features of Interest/ll_gda94/sde_shape/whole/VIC/VMFEAT/layer", layer = "foi_index_centroid")
#Converting to data frame
shapefile_df <- data.frame(shp)
esite<-shapefile_df %>% filter((FTYPE == "emergency facility") & (PARENTNAME %like% "NATIONAL PARK"))
library(data.table)
esite<-shapefile_df %>% filter((FTYPE == "emergency facility") & (PARENTNAME %like% "NATIONAL PARK"))
esite = esite %>%
rename(
Longitude = X_COORD,
Latitude = Y_COORD,
Facility = FEATSUBTYP,
Park_name = PARENTNAME,
)
View(esite)
write.csv(esite, file = "c:\\Users\\ClockworK\\Desktop\\IE project\\emergencyfacility_mapbox.csv", row.names = FALSE)
camp_df<- read_excel("Campgrounds_site_v4.xlsx")
newdat <- camp_df[,c(1,3,10,11,13,14,15)]
View(newdat)
View(camp_df)
View(camp_df)
#reading the full dataset
camp_df<- read_excel("Campgrounds_site_v4.xlsx")
#selecting required columns
newdat <- camp_df[,c(1,3,4,10,11,13,14,15)]
#selecting required columns
newdat <- camp_df[,c(1,3,4,10,11,13,14,15)]
newdat = newdat %>%
rename(
Longitude = xcoord,
Latitude = ycoord,
Park = PARK_NAME,
Description = ASSET_DESC,
Animal_warning = ANIMALS_WARN,
Other_warning = OTHER_WARN,
Site_Name = SITE_NAME
)
View(newdat)
write.csv(newdat, file = "c:\\Users\\ClockworK\\Desktop\\IE project\\Campgrounds_mapbox.csv", row.names = FALSE)
#reading the full dataset
camp_df<- read_excel("Campgrounds_site_v4.xlsx")
#selecting required columns
newdat <- camp_df[,c(1,3,4,10,11,13,14,15)]
newdat = newdat %>%
rename(
Longitude = xcoord,
Latitude = ycoord,
Park = PARK_NAME,
Description = ASSET_DESC,
Animal_warning = ANIMALS_WARN,
Other_warning = OTHER_WARN,
Site_Name = SITE_NAME
)
newdat$NOTE <- as.character(newdat$NOTE)
newdat$NOTE[is.na(newdat$NOTE)] <- " "
newdat$Animal_warning <- as.character(newdat$Animal_warning)
newdat$Animal_warning[is.na(newdat$Animal_warning)] <- " "
newdat$Other_warning <- as.character(newdat$Other_warning)
newdat$Other_warning[is.na(newdat$Other_warning)] <- " "
write.csv(newdat, file = "c:\\Users\\ClockworK\\Desktop\\IE project\\Campgrounds_mapbox.csv", row.names = FALSE)
#reading the full dataset
camp_df<- read_excel("Campgrounds_site_v4.xlsx")
#selecting required columns
newdat <- camp_df[,c(1,3,4,10,11,13,14,15)]
newdat = newdat %>%
rename(
Longitude = xcoord,
Latitude = ycoord,
Park = PARK_NAME,
Description = ASSET_DESC,
Animal_warning = ANIMALS_WARN,
Other_warning = OTHER_WARN,
Site_Name = SITE_NAME
)
newdat$NOTE <- as.character(newdat$NOTE)
newdat$NOTE[is.na(newdat$NOTE)] <- "NONE"
newdat$Animal_warning <- as.character(newdat$Animal_warning)
newdat$Animal_warning[is.na(newdat$Animal_warning)] <- "NONE"
newdat$Other_warning <- as.character(newdat$Other_warning)
newdat$Other_warning[is.na(newdat$Other_warning)] <- "NONE"
write.csv(newdat, file = "c:\\Users\\ClockworK\\Desktop\\IE project\\Campgrounds_mapbox.csv", row.names = FALSE)
#reading the full dataset
camp_df<- read_excel("Campgrounds_site_v4.xlsx")
#selecting required columns
newdat <- camp_df[,c(1,3,4,10,11,13,14,15)]
newdat = newdat %>%
rename(
Longitude = xcoord,
Latitude = ycoord,
Park = PARK_NAME,
Description = ASSET_DESC,
Animal_warning = ANIMALS_WARN,
Other_warning = OTHER_WARN,
Site_Name = SITE_NAME
)
View(newdat)
newdat$NOTE <- as.character(newdat$NOTE)
newdat$NOTE[is.na(newdat$NOTE)] <- "NONE"
newdat$Animal_warning <- as.character(newdat$Animal_warning)
newdat$Animal_warning[is.na(newdat$Animal_warning)] <- "NONE"
newdat$Other_warning <- as.character(newdat$Other_warning)
newdat$Other_warning[is.na(newdat$Other_warning)] <- "NONE"
View(newdat)
write.csv(newdat, file = "c:\\Users\\ClockworK\\Desktop\\IE project\\Campgrounds_mapbox.csv", row.names = FALSE)
write.csv(newdat, file = "c:\\Users\\ClockworK\\Desktop\\IE project\\Campgrounds_final.csv", row.names = FALSE)
unzip(zipfile = "vic_hospitals.kmz.zip",
exdir = 'hospital_doc_file')
hospital_data<- st_read("c:\\Users\\ClockworK\\Desktop\\IE project\\hospital_doc_file\\doc.kml")
View(hospital_data)
View(hospital)
View(hospital_data)
unzip(zipfile = "mygeodata.zip")
hospital_df <- read.csv(file = 'doc.csv')
View(hospital)
View(hospital_df)
#selecting required columns
hospital_df <- hospital_df[,c(1,2,3,7,8,11,13)]
View(national_df)
hospital_df = hospital_df %>%
rename(
Longitude = X,
Latitude = Y
)
write.csv(hospital_df, file = "c:\\Users\\ClockworK\\Desktop\\IE project\\hospital_final.csv", row.names = FALSE)
unzip(zipfile = "Vicmap Features of Interest.zip",
exdir = 'Vicmap Features of Interest')
shp <- readOGR(dsn = "Vicmap Features of Interest/ll_gda94/sde_shape/whole/VIC/VMFEAT/layer", layer = "foi_index_centroid")
#Converting to data frame
shapefile_df <- data.frame(shp)
esite<-shapefile_df %>% filter((FTYPE == "emergency facility") & (PARENTNAME %like% "NATIONAL PARK"))
View(esite)
esite <- esite[,c(6,8,10,21,22)]
esite = esite %>%
rename(
Longitude = X_COORD,
Latitude = Y_COORD,
Park = PARENTNAME,
Facility_type = FEATSUBTYP
)
write.csv(esite, file = "c:\\Users\\ClockworK\\Desktop\\IE project\\emergency_facility_final.csv", row.names = FALSE)
animals = read.csv('dangerous_species_unique_v2.csv')
View(animals)
unique(animals[c("Common_Name")])
blue_ant = subset(animals, Common_Name=='Blue Ant')
View(blue_ant)
honey_bee = subset(animals, Common_Name=='Honey Bee')
View(honey_bee)
